%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.0.7
%%CreationDate: Tue Feb 25 12:08:26 2014
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCCUCAUCGGCAAACAAAAAAAUGUUAGUGUGAACACACCACACAAACACU____________________UUUUUAAUUGCAGAACAGGC\
) def
/coor [
[92.50000000 392.66271973]
[92.50000000 377.66271973]
[92.50000000 362.66271973]
[92.50000000 347.66271973]
[92.50000000 332.66271973]
[92.50000000 317.66271973]
[92.50000000 302.66271973]
[92.50000000 287.66271973]
[92.50000000 272.66271973]
[92.50000000 257.66271973]
[92.50000000 242.66271973]
[92.50000000 227.66271973]
[92.50000000 212.66271973]
[92.50000000 197.66271973]
[92.50000000 182.66271973]
[92.50000000 167.66271973]
[92.50000000 152.66271973]
[92.50000000 137.66271973]
[92.50000000 122.66271973]
[92.50000000 107.66271973]
[87.47680664 93.52880859]
[78.01049042 81.89314270]
[68.54416656 70.25746918]
[59.07784653 58.62179947]
[49.61153030 46.98612976]
[40.14521027 35.35046005]
[30.67889023 23.71479225]
[21.21257210 12.07912254]
[11.74625206 0.44345343]
[2.27993345 -11.19221592]
[-7.18638563 -22.82788467]
[-16.65270424 -34.46355438]
[-26.11902428 -46.09922409]
[-41.86669922 -49.16358185]
[-49.16136551 -63.45230103]
[-42.40717697 -78.00429535]
[-26.78537178 -81.65651703]
[-14.27966118 -71.60729980]
[-14.48335457 -55.56554413]
[-5.01703548 -43.92987442]
[4.44928360 -32.29420471]
[13.91560268 -20.65853500]
[23.38192177 -9.02286530]
[32.84823990 2.61280370]
[42.31455994 14.24847317]
[51.78087997 25.88414192]
[61.24720001 37.51981354]
[70.71351624 49.15547943]
[80.17984009 60.79114914]
[89.64615631 72.42681885]
[99.11247253 84.06249237]
[99.55776978 69.06909943]
[104.08690643 54.76920700]
[112.35449219 42.25333786]
[123.73003387 32.47596359]
[137.34600830 26.18271446]
[152.16407776 23.85352325]
[167.05416870 25.66601753]
[180.88076782 31.48197174]
[192.58941650 40.85785675]
[201.28724670 53.07865906]
[206.31091309 67.21240234]
[207.27731323 82.18123627]
[204.11276245 96.84362793]
[197.05859375 110.08139801]
[186.65274048 120.88502502]
[173.68878174 128.43061829]
[159.15536499 132.14273071]
[144.16082764 131.73828125]
[129.84864807 127.24810791]
[117.31030273 119.01464081]
[107.50000000 107.66271973]
[107.50000000 122.66271973]
[107.50000000 137.66271973]
[107.50000000 152.66271973]
[107.50000000 167.66271973]
[107.50000000 182.66271973]
[107.50000000 197.66271973]
[107.50000000 212.66271973]
[107.50000000 227.66271973]
[107.50000000 242.66271973]
[107.50000000 257.66271973]
[107.50000000 272.66271973]
[107.50000000 287.66271973]
[107.50000000 302.66271973]
[107.50000000 317.66271973]
[107.50000000 332.66271973]
[107.50000000 347.66271973]
[107.50000000 362.66271973]
[107.50000000 377.66271973]
[107.50000000 392.66271973]
] def
/pairs [
[1 91]
[2 90]
[3 89]
[4 88]
[5 87]
[6 86]
[7 85]
[8 84]
[9 83]
[10 82]
[11 81]
[12 80]
[13 79]
[14 78]
[15 77]
[16 76]
[17 75]
[18 74]
[19 73]
[20 72]
[21 51]
[22 50]
[23 49]
[24 48]
[25 47]
[26 46]
[27 45]
[28 44]
[29 43]
[30 42]
[31 41]
[32 40]
[33 39]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
1 91 1 gmark
1 cmark
91 cmark
2 90 1 gmark
2 cmark
90 cmark
3 89 1 gmark
3 cmark
89 cmark
4 88 1 gmark
4 cmark
88 cmark
5 87 1 gmark
5 cmark
87 cmark
6 86 1 gmark
6 cmark
86 cmark
7 85 1 gmark
7 cmark
85 cmark
8 84 1 gmark
8 cmark
84 cmark
9 83 1 gmark
9 cmark
83 cmark
10 82 1 gmark
10 cmark
82 cmark
11 cmark
81 cmark
12 cmark
80 cmark
13 cmark
79 cmark
14 cmark
78 cmark
15 77 4 gmark
15 cmark
77 cmark
16 76 5 gmark
16 cmark
76 cmark
17 75 4 gmark
17 cmark
75 cmark
18 74 2 gmark
18 cmark
74 cmark
19 73 2 gmark
19 cmark
73 cmark
20 72 1 gmark
20 cmark
72 cmark
21 51 3 gmark
21 cmark
51 cmark
22 50 3 gmark
22 cmark
50 cmark
23 49 2 gmark
23 cmark
49 cmark
24 48 2 gmark
24 cmark
48 cmark
25 47 3 gmark
25 cmark
47 cmark
26 46 3 gmark
26 cmark
46 cmark
27 45 5 gmark
27 cmark
45 cmark
28 44 3 gmark
28 cmark
44 cmark
29 cmark
43 cmark
30 cmark
42 cmark
31 cmark
41 cmark
32 cmark
40 cmark
33 cmark
39 cmark

% End Annotations
% show it
showpage
end
%%EOF
