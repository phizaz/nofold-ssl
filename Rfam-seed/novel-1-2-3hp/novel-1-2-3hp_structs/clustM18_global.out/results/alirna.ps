%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.0.7
%%CreationDate: Tue Feb 25 12:09:12 2014
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
__________GCUUGACUGGGACACACCGCGGGACUCCCCCGAGGAGUGUCCCCCACAGAAGCCGGGGGGGCCAGACAACC__________\
) def
/coor [
[84.01023865 362.23428345]
[70.39234161 355.67346191]
[59.31441116 345.38897705]
[51.76148987 332.29528809]
[48.40518188 317.55667114]
[49.54392624 302.48370361]
[55.07646942 288.41662598]
[64.51085663 276.60629272]
[77.00819397 268.10287476]
[91.45721436 263.66250610]
[91.45721436 248.66250610]
[91.45721436 233.66250610]
[91.45721436 218.66250610]
[91.45721436 203.66250610]
[91.45721436 188.66250610]
[91.45721436 173.66250610]
[91.45721436 158.66250610]
[91.45721436 143.66250610]
[91.45721436 128.66250610]
[91.45721436 113.66249847]
[80.30747986 94.30577087]
[70.84116364 82.67009735]
[61.37484360 71.03443146]
[51.90852356 59.39876175]
[42.44220352 47.76309204]
[32.97588348 36.12742233]
[23.50956535 24.49175453]
[14.04324627 12.85608482]
[4.57692719 1.22041547]
[-4.88939190 -10.41525364]
[-14.35571098 -22.05092239]
[-23.82203102 -33.68659210]
[-33.28834915 -45.32226181]
[-49.03602600 -48.38661957]
[-56.33068848 -62.67533875]
[-49.57650375 -77.22733307]
[-33.95469666 -80.87955475]
[-21.44898605 -70.83033752]
[-21.65267944 -54.78858185]
[-12.18636131 -43.15291214]
[-2.72004199 -31.51724243]
[6.74627733 -19.88157272]
[16.21259689 -8.24590397]
[25.67891502 3.38976574]
[35.14523315 15.02543545]
[44.61155319 26.66110420]
[54.07787323 38.29677200]
[63.54419327 49.93244171]
[73.01051331 61.56811142]
[82.47682953 73.20378113]
[91.94315338 84.83945465]
[106.67937469 87.64010620]
[119.75428009 80.28845215]
[132.82919312 72.93679810]
[145.90409851 65.58514404]
[158.97900391 58.23349380]
[172.05390930 50.88183975]
[185.12881470 43.53018951]
[198.20372009 36.17853546]
[206.09439087 21.80252838]
[222.49331665 21.71860313]
[230.53070068 36.01309204]
[221.93836975 49.98105240]
[205.55537415 49.25344086]
[192.48046875 56.60509491]
[179.40556335 63.95674896]
[166.33065796 71.30840302]
[153.25575256 78.66005707]
[140.18084717 86.01171112]
[127.10593414 93.36335754]
[114.03102875 100.71501160]
[106.45721436 113.66249847]
[106.45721436 128.66250610]
[106.45721436 143.66250610]
[106.45721436 158.66250610]
[106.45721436 173.66250610]
[106.45721436 188.66250610]
[106.45721436 203.66250610]
[106.45721436 218.66250610]
[106.45721436 233.66250610]
[106.45721436 248.66250610]
[106.45721436 263.66250610]
[120.90624237 268.10287476]
[133.40357971 276.60629272]
[142.83796692 288.41662598]
[148.37051392 302.48370361]
[149.50924683 317.55667114]
[146.15293884 332.29528809]
[138.60002136 345.38897705]
[127.52209473 355.67346191]
[113.90419006 362.23428345]
] def
/pairs [
[10 82]
[11 81]
[12 80]
[13 79]
[14 78]
[15 77]
[16 76]
[17 75]
[18 74]
[19 73]
[20 72]
[21 51]
[22 50]
[23 49]
[24 48]
[25 47]
[26 46]
[27 45]
[28 44]
[29 43]
[30 42]
[31 41]
[32 40]
[33 39]
[52 71]
[53 70]
[54 69]
[55 68]
[56 67]
[57 66]
[58 65]
[59 64]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
10 82 6 gmark
11 cmark
81 cmark
12 cmark
80 cmark
13 cmark
79 cmark
14 cmark
78 cmark
15 cmark
77 cmark
16 cmark
76 cmark
17 cmark
75 cmark
18 cmark
74 cmark
19 cmark
73 cmark
20 cmark
72 cmark
21 cmark
51 cmark
22 cmark
50 cmark
23 cmark
49 cmark
24 cmark
48 cmark
25 cmark
47 cmark
26 cmark
46 cmark
27 cmark
45 cmark
28 cmark
44 cmark
29 cmark
43 cmark
30 cmark
42 cmark
31 cmark
41 cmark
32 cmark
40 cmark
33 cmark
39 cmark
52 71 1 gmark
52 cmark
71 cmark
53 70 1 gmark
53 cmark
70 cmark
54 69 1 gmark
54 cmark
69 cmark
55 68 1 gmark
55 cmark
68 cmark
56 67 1 gmark
56 cmark
67 cmark
57 66 1 gmark
57 cmark
66 cmark
58 65 1 gmark
58 cmark
65 cmark
59 64 1 gmark
59 cmark
64 cmark

% End Annotations
% show it
showpage
end
%%EOF
